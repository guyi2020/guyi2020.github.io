<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kafka on 古一 - 个人博客网站</title>
    <link>http://localhost:1313/tags/kafka/</link>
    <description>Recent content in kafka on 古一 - 个人博客网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>古一</copyright>
    <lastBuildDate>Sun, 27 Dec 2020 21:40:17 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/kafka/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>消息队列</title>
      <link>http://localhost:1313/post/%E9%98%9F%E5%88%97/</link>
      <pubDate>Sun, 27 Dec 2020 21:40:17 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E9%98%9F%E5%88%97/</guid>
      <description> 消息队列
 使用消息队列的好处   解耦 ❗
 允许独立扩展或者修改前后处理过程，只要确保它们遵守同样的接口约束    可恢复性
 系统的部分组件失败时，不会危及到整个系统。消息队列降低了进程间的耦合度，即使一个处理消息的进程挂掉，加入队列中的消息仍然可以在系统恢复后被处理    缓冲
 有助于控制和优化数据经过系统的速度，解决生产消息和消费消息处理速度不一致的情况。（一般都是生产消息的速度比消费消息快）    灵活性 &amp;amp; 峰值处理能力（削峰） ❗
 在访问量剧增的情况下，使用消息队列能够使在关键组件顶住访问压力，不会因突发的超负荷而导致崩溃    异步通信
 很多时候，用户不需要立即处理消息。消息队列提供了异步处理机制。将一个消息放入队列，但并不立即处理它。向队列中放入消息，然后再需要的时候再去处理它们    </description>
    </item>
    
  </channel>
</rss>

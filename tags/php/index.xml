<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on 古一 - 个人博客</title>
    <link>/tags/php/</link>
    <description>Recent content in PHP on 古一 - 个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 30 Jun 2021 12:08:00 +0800</lastBuildDate><atom:link href="/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CURL类</title>
      <link>/post/php/curl%E7%B1%BB/</link>
      <pubDate>Wed, 30 Jun 2021 12:08:00 +0800</pubDate>
      
      <guid>/post/php/curl%E7%B1%BB/</guid>
      <description>请求方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 public static function sendRequest($url, $params = [], $method = &amp;#39;POST&amp;#39;, $options</description>
    </item>
    
    <item>
      <title>安装zookeeper</title>
      <link>/post/%E5%AE%89%E8%A3%85dubbo-php/</link>
      <pubDate>Thu, 24 Jun 2021 09:08:00 +0800</pubDate>
      
      <guid>/post/%E5%AE%89%E8%A3%85dubbo-php/</guid>
      <description>下载 https://archive.apache.org/dist/zookeeper/zookeeper-3.4.9/ 编译安装 ./configure --with-php-config=/usr/local/php/bin/php-config demo-provider start /usr/local/src/dubbo-php-framework/demo/demo-provider php ./bin/app_admin.php demo-provider start /usr/local/src/dubbo-php-framework/demo/demo-consumer/server /usr/local/src/dubbo-php-framework/agent/src/c/release/agent_server netstat -anp | grep 2181 yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel cat /var/fsof/provider/example_swoole.log /usr/local/src/zookeeper-3.4.9/bin/zkServer.sh start /usr/local/php/bin/php /usr/local/src/dubbo-php-framework/bin/app_admin.php demo-provider start /usr/local/php/bin/php /usr/local/src/dubbo-php-framework/demo/demo-consumer/server/Consumer.php cd /usr/local/src/dubbo-php-framework/agent/src/c/release sh start_agent_server.sh vim /etc/profile export LD_LIBRARY_PATH=/usr/local/lib source /etc/profile sh start_agent_server.sh http://tool.chinaz.com/tools/urlencode.aspx vim consumer/proxy/ProxyFactory.php docker run &amp;ndash;name mysql-test &amp;ndash;privileged=true /usr/local/php/bin/php /usr/local/src/dubbo-php-framework/config/global/conf/fsof.ini</description>
    </item>
    
    <item>
      <title>编译安装PHP7.2</title>
      <link>/post/php/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85php7.2/</link>
      <pubDate>Thu, 24 Jun 2021 09:08:00 +0800</pubDate>
      
      <guid>/post/php/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85php7.2/</guid>
      <description>安装必要工具 yum -y install gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers gd gd2 gd-devel gd2-devel perl-CPAN pcre-devel 下载php7.2版本 wget http://cn2.php.net/distributions/php-7.2.8.tar.gz 解压，编译安装</description>
    </item>
    
    <item>
      <title>Swoole安装使用</title>
      <link>/post/php/swoole%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 22 Jun 2021 09:08:00 +0800</pubDate>
      
      <guid>/post/php/swoole%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid>
      <description>下载Swoole源码 https://github.com/swoole/swoole-src/releases 解压并进入到目录 cd swoole-src-4.6.7 执行phpize /Applications/MAMP/bin/php/php7.2.8/bin/phpize 注意：PHP版本，用的是7.2以上 编译 ./configure --with-php-config=/Applications/MAMP/bin/php/php7.2.8/bin/php-config 执行后结果： 1 2 3 4 5 6 7 8 9 Build complete. Don&amp;#39;t forget</description>
    </item>
    
    <item>
      <title>php-cli和web服务端加载模块不一致</title>
      <link>/post/php-cli%E5%92%8Cweb%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8A%A0%E8%BD%BD%E6%A8%A1%E5%9D%97%E4%B8%8D%E4%B8%80%E8%87%B4/</link>
      <pubDate>Mon, 21 Jun 2021 12:08:00 +0800</pubDate>
      
      <guid>/post/php-cli%E5%92%8Cweb%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8A%A0%E8%BD%BD%E6%A8%A1%E5%9D%97%E4%B8%8D%E4%B8%80%E8%87%B4/</guid>
      <description>php-cli php -m 注意：查找不到对应的扩展 web服务端 访问 phpinfo() 发现两者的加载模块不一致，原因就是两个端引用的配置文件不一致。 查看php-cli配置文件路径</description>
    </item>
    
    <item>
      <title>单例模式</title>
      <link>/post/designer/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 11 Jun 2021 12:08:00 +0800</pubDate>
      
      <guid>/post/designer/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>单例模式实例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64</description>
    </item>
    
    <item>
      <title>安装zookeeper扩展</title>
      <link>/post/%E5%AE%89%E8%A3%85zookeeper%E6%89%A9%E5%B1%95/</link>
      <pubDate>Fri, 11 Jun 2021 12:08:00 +0800</pubDate>
      
      <guid>/post/%E5%AE%89%E8%A3%85zookeeper%E6%89%A9%E5%B1%95/</guid>
      <description>扩展下载地址 http://pecl.php.net/package/zookeeper 注意：dev 是远程分支的名称 zookeeper稳定版下载地址 https://downloads.apache.org/zookeeper/stable/ brew install automake</description>
    </item>
    
    <item>
      <title>设计模式</title>
      <link>/post/designer/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 11 Jun 2021 12:08:00 +0800</pubDate>
      
      <guid>/post/designer/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>抽象工厂 生成器模式 生成器的目的是将复杂对象的创建过程（流程）进行抽象，生成器表现为接口的形式。 在特定的情况下，比如如果生成器对将要创建的对象</description>
    </item>
    
    <item>
      <title>php-amqplib库操作RabbitMQ</title>
      <link>/post/php/php-amqplib%E5%BA%93%E6%93%8D%E4%BD%9Crabbitmq/</link>
      <pubDate>Thu, 27 May 2021 11:11:00 +0800</pubDate>
      
      <guid>/post/php/php-amqplib%E5%BA%93%E6%93%8D%E4%BD%9Crabbitmq/</guid>
      <description>1. composer安装php-amqplib库 composer require php-amqplib/php-amqplib 2. 生产者代码 send.php 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 &amp;lt;?php require_once __DIR__.&amp;#39;/vendor/autoload.php&amp;#39;; use PhpAmqpLib\Connection\AMQPStreamConnection; use PhpAmqpLib\Message\AMQPMessage; $connection = new AMQPStreamConnection(&amp;#39;172.17.0.2&amp;#39;, 5672, &amp;#39;admin&amp;#39;, &amp;#39;admin&amp;#39;); $channel = $connection-&amp;gt;channel();</description>
    </item>
    
    <item>
      <title>PHP题目</title>
      <link>/post/php/php%E9%A2%98%E7%9B%AE/</link>
      <pubDate>Tue, 25 May 2021 13:08:00 +0800</pubDate>
      
      <guid>/post/php/php%E9%A2%98%E7%9B%AE/</guid>
      <description>业务问题 1. 商城秒杀的实现? ​ 首先，抢购、秒杀是如今很常见的一个应用场景，主要需要解决的问题有两个： 高并发对数据库产生的压力 利用缓存来处理抢购</description>
    </item>
    
    <item>
      <title>RabbitMQ消息队列</title>
      <link>/post/rabbitmq/</link>
      <pubDate>Tue, 25 May 2021 13:08:00 +0800</pubDate>
      
      <guid>/post/rabbitmq/</guid>
      <description>1. RabbitMQ简介 消息队列（Message Queue）是一种应用间的通信方式，消息发送后可以立即返回。消息使用者再从MQ中取消息进行逻辑</description>
    </item>
    
    <item>
      <title>MAMP PRO安装PHP扩展</title>
      <link>/post/mamp_pro%E5%AE%89%E8%A3%85php%E6%89%A9%E5%B1%95/</link>
      <pubDate>Fri, 23 Apr 2021 13:08:00 +0800</pubDate>
      
      <guid>/post/mamp_pro%E5%AE%89%E8%A3%85php%E6%89%A9%E5%B1%95/</guid>
      <description>1. 进入php的bin目录 cd /Applications/MAMP/bin/php/php7.1.20/bin 2. 执行pecl命令 ./pecl install redis ./pecl install mongodb</description>
    </item>
    
  </channel>
</rss>

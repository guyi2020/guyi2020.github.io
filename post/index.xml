<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 古一 - 个人博客网站</title>
    <link>https://guyi2020.github.io/post/</link>
    <description>Recent content in Posts on 古一 - 个人博客网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>古一</copyright>
    <lastBuildDate>Wed, 20 Jan 2021 14:24:30 +0800</lastBuildDate><atom:link href="https://guyi2020.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP 报文信息</title>
      <link>https://guyi2020.github.io/post/http%E6%8A%A5%E6%96%87%E4%BF%A1%E6%81%AF/</link>
      <pubDate>Wed, 20 Jan 2021 14:24:30 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/http%E6%8A%A5%E6%96%87%E4%BF%A1%E6%81%AF/</guid>
      <description>1. HTTP 报文 用于 HTTP 协议交互的信息被称为 HTTP 报文。请求端（客户端）的 HTTP 报文叫做请求报文，响应端（服务器端）的叫做响应报文。 HTTP 报文本身是由多行（用 CR+LF 作换行符）数据构成的字符串文本。
报文首部
服务器端或客户端需要处理的请求或响应的内容以及属性。
报文主体
应被发送的数据。
 两者由最初出现的 空行（CR+LF）来划分。通常，并不一定要有报文主体。
 2. 报文结构 3. 编码提升传输速率  HTTP 在传输数据时可以按照数据原貌直接传输，但也可以在传输过 程中通过编码提升传输速率。通过在传输时编码，能有效地处理大量 的访问请求。但是，编码的操作需要计算机来完成，因此会消耗更多 的 CPU 等资源。
 报文主体和实体主体的差异 报文
报文（message） 是 HTTP 通信中的基本单位，由 8 位组字节流（octet sequence， 其中 octet 为 8 个比特）组成，通过 HTTP 通信传输。
实体
实体（entity） 作为请求或响应的有效载荷数据（补充项）被传输，其内容由实 体首部和实体主体组成。
</description>
    </item>
    
    <item>
      <title>简单的 HTTP 协议</title>
      <link>https://guyi2020.github.io/post/%E7%AE%80%E5%8D%95%E7%9A%84-http-%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Tue, 19 Jan 2021 14:24:30 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/%E7%AE%80%E5%8D%95%E7%9A%84-http-%E5%8D%8F%E8%AE%AE/</guid>
      <description>1. HTTP 协议用于客户端和服务器端之间的通信 请求访问文本或图像等资源的一端称为客户端，而提供资源响应的一 端称为服务器端。
HTTP请求报文 1 2 3 4 5 6 7  POST /user HTTP/1.1 //请求行 Host: www.user.com Content-Type: application/x-www-form-urlencoded Connection: Keep-Alive User-agent: Mozilla/5.0. //以上是首部行 （此处必须有一空行） //空行分割header和请求内容 name=world 请求体   POST
起始行开头的POST表示请求访问服务器的类型，称为方法。
user
随后的字符串 /user 指明了请求访问的资源对象， 也叫做请求 URI。
HTTP版本号
HTTP/1.1，即 HTTP 的版本 号，用来提示客户端使用的 HTTP 协议功能。
 请求报文是由请求方法、请求 URI、协议版本、可选的请求首部字段和内容实体构成的。
 HTTP返回报文 1 2 3 4 5 6 7  HTTP/1.1 200 OK Date: Tue, 10 Jul 2020 06:50:15 GMT Content-Length: 362 Content-Type: text/html &amp;lt;html&amp;gt; .</description>
    </item>
    
    <item>
      <title>了解 Web 及网络基础</title>
      <link>https://guyi2020.github.io/post/%E4%BA%86%E8%A7%A3-web-%E5%8F%8A%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 18 Jan 2021 16:25:17 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/%E4%BA%86%E8%A7%A3-web-%E5%8F%8A%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</guid>
      <description>1. TCP/IP协议分层 协议分层
  应用层
  传输层
  网络层
  数据链路层
  提示
如果某些地方需要改动，只需要把变动的层修改逻辑。各层对外接口部分规划好，内部设计就比较灵活了。分层好处之一。
应用层 应用层决定了向用户提供应用服务时通信的活动。TCP/IP 协议族内预存了各类通用的应用服务。比如，FTP（File Transfer Protocol，文件传输协议）和 DNS（Domain Name System，域 名系统）服务就是其中两类。 HTTP 协议也处于该层。
传输层 传输层对上层应用层，提供处于网络连接中的两台计算机之间的数据传输。TCP（Transmission Control Protocol，传输控制协议）和 UDP（User Data Protocol，用户数据报 协议）。
网络层 网络层用来处理在网络上流动的数据包。数据包是网络传输的最小数据单位。与对方计算机之间通过多台计算机或网络设备进行传输时，网络层所起的作用就是在众多的选项内选择一条传输路线。
链路层 处理连接网络的硬件部分（网卡，光纤）。
2. TCP/IP 通信传输流 IP协议
发送端在层与层之间传输时，每经过一层必定会打上一个该层的所属的首部信息。
接收端同理，每经过一层时，会把对应的首部消去。
 3. 与 HTTP 关系密切的协议 : IP、TCP 和 DNS 负责传输的 IP 协议 IP协议
IP协议的作用就是把数据包传输给对方。需要通过IP地址和MAC地址才能确保准确送达到对方。
IP地址就是节点被分配的地址，MAC地址就是网卡的固定地址。IP地址和MAC地址进行配对。</description>
    </item>
    
    <item>
      <title>消息队列</title>
      <link>https://guyi2020.github.io/post/%E9%98%9F%E5%88%97/</link>
      <pubDate>Sun, 27 Dec 2020 21:40:17 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/%E9%98%9F%E5%88%97/</guid>
      <description> 消息队列
 使用消息队列的好处   解耦 ❗
 允许独立扩展或者修改前后处理过程，只要确保它们遵守同样的接口约束    可恢复性
 系统的部分组件失败时，不会危及到整个系统。消息队列降低了进程间的耦合度，即使一个处理消息的进程挂掉，加入队列中的消息仍然可以在系统恢复后被处理    缓冲
 有助于控制和优化数据经过系统的速度，解决生产消息和消费消息处理速度不一致的情况。（一般都是生产消息的速度比消费消息快）    灵活性 &amp;amp; 峰值处理能力（削峰） ❗
 在访问量剧增的情况下，使用消息队列能够使在关键组件顶住访问压力，不会因突发的超负荷而导致崩溃    异步通信
 很多时候，用户不需要立即处理消息。消息队列提供了异步处理机制。将一个消息放入队列，但并不立即处理它。向队列中放入消息，然后再需要的时候再去处理它们    </description>
    </item>
    
    <item>
      <title>Theme preview</title>
      <link>https://guyi2020.github.io/post/even-preview/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/even-preview/</guid>
      <description>Based on MarkdownPreview test.md.
 Markdown 1 2 3 4 5 6 7 8  # H1 ## H2 ### H3 #### H4 ##### H5 ###### H6 ### Duplicate Header ### Duplicate Header   H1 H2 H3 H4 H5 H6 Duplicate Header Duplicate Header Paragraphs 1 2 3 4  This is a paragraph. I am still part of the paragraph. New paragraph.   This is a paragraph.</description>
    </item>
    
    <item>
      <title>This is a hidden post.</title>
      <link>https://guyi2020.github.io/post/hidden-post/</link>
      <pubDate>Thu, 08 Mar 2018 17:40:19 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/hidden-post/</guid>
      <description>&lt;p&gt;This post is hidden from the home page.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[English] Creating a New Theme</title>
      <link>https://guyi2020.github.io/post/english-preview/</link>
      <pubDate>Thu, 31 Aug 2017 15:43:48 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/english-preview/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>初次见面</title>
      <link>https://guyi2020.github.io/post/golang/</link>
      <pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://guyi2020.github.io/post/golang/</guid>
      <description>你好啊 1  print(&amp;#39;hello world&amp;#39;)   </description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>https://guyi2020.github.io/post/shortcodes/</link>
      <pubDate>Tue, 30 Aug 2016 16:01:23 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/shortcodes/</guid>
      <description>&lt;h1 id=&#34;admonition&#34;&gt;Admonition&lt;/h1&gt;
&lt;div class=&#34;admonition note&#34;&gt;&lt;p class=&#34;admonition-title&#34;&gt;I&amp;#39;m title!&lt;/p&gt;
&lt;p&gt;biu biu biu.&lt;/p&gt;
&lt;details class=&#34;admonition note&#34;&gt;&lt;summary class=&#34;admonition-title&#34;&gt;note&lt;/summary&gt;
  &lt;p&gt;biu biu biu.&lt;/p&gt;
&lt;/details&gt;
&lt;div class=&#34;admonition example&#34;&gt;
  &lt;p&gt;Without title.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;{{% admonition note &amp;#34;I&amp;#39;m title!&amp;#34; false %}}
biu biu biu.

{{% admonition type=&amp;#34;note&amp;#34; title=&amp;#34;note&amp;#34; details=&amp;#34;true&amp;#34; %}}
biu biu biu.
{{% /admonition %}}

{{% admonition example %}}
Without title.
{{% /admonition %}}

{{% /admonition %}}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>JS Flowchart Diagrams</title>
      <link>https://guyi2020.github.io/post/js-flowchart-diagrams/</link>
      <pubDate>Wed, 04 Mar 2015 21:57:50 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/js-flowchart-diagrams/</guid>
      <description>&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;st=&amp;gt;start: Start|past:&amp;gt;http://www.google.com[blank]
e=&amp;gt;end: End:&amp;gt;http://www.google.com
op1=&amp;gt;operation: My Operation|past
op2=&amp;gt;operation: Stuff|current
sub1=&amp;gt;subroutine: My Subroutine|invalid
cond=&amp;gt;condition: Yes
or No?|approved:&amp;gt;http://www.google.com
c2=&amp;gt;condition: Good idea|rejected
io=&amp;gt;inputoutput: catch something...|request

st-&amp;gt;op1(right)-&amp;gt;cond
cond(yes, right)-&amp;gt;c2
cond(no)-&amp;gt;sub1(left)-&amp;gt;op1
c2(yes)-&amp;gt;io-&amp;gt;e
c2(no)-&amp;gt;op2-&amp;gt;e
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>JS Sequence Diagrams</title>
      <link>https://guyi2020.github.io/post/js-sequence-diagrams/</link>
      <pubDate>Wed, 04 Mar 2015 21:57:45 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/js-sequence-diagrams/</guid>
      <description>&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Andrew-&amp;gt;China: Says Hello
Note right of China: China thinks\nabout it
China--&amp;gt;Andrew: How are you?
Andrew-&amp;gt;&amp;gt;China: I am good thanks!
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Syntax Highlighting</title>
      <link>https://guyi2020.github.io/post/syntax-highlighting/</link>
      <pubDate>Tue, 30 Aug 2011 16:01:23 +0800</pubDate>
      
      <guid>https://guyi2020.github.io/post/syntax-highlighting/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;helloWorld&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
